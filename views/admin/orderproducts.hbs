
<main id="main" class="main">
    

    
       <div style="background-color:#ffff ;" class="super_container">
         


        <div class="container-fluid p-5">
            <div class="row">
          <div class="col-xl-8">
            <ul class="list-unstyled">
              <li class="text"><h4>Address</h4></li>
               <li class="text-muted">Name: {{userDetail.name}}</li>
                <li class="text-muted">Mobile: {{userDetail.mobile}}</li>
              <li class="text-muted">Address: {{userDetail.address}}</li>
              <li class="text-muted">Town: {{userDetail.town}}</li>
              <li class="text-muted"><i class="fas fa-phone"></i>Pin: {{userDetail.pincode}}</li>
            </ul>
          </div>
          <div class="col-xl-4">
            <p class="text"><h4>Invoice</h4></p>
            <ul class="list-unstyled">
              <li class="text-muted"><i class="fas fa-circle" style="color:#84B0CA ;"></i> <span
                  class="fw-bold">ID:</span>#123-456</li>
              <li class="text-muted"><i class="fas fa-circle" style="color:#84B0CA ;"></i> <span
                  class="fw-bold">Order Date: </span>{{userDetail.date}}</li>
                
            </ul>
          </div>
        </div>

        <div class="row my-2 mx-1 justify-content-center">
          <table class="table table-striped table-borderless">
            <thead style="background-color:#4b5366 ;" class="text-white">
              <tr>
                <th scope="col">No</th>
                <th scope="col">Product</th>
                <th scope="col">Image</th>
                <th scope="col">Qty</th>
                <th scope="col">Amount</th>
                <th scope="col">Status</th>
              </tr>
            </thead>
            <tbody>
                {{#each orderProducts}}
              <tr>
                <th scope="row" class="create_index"></th>
                <td>{{this.orderProduct.product}}</td>
                <td><img style="width:4em ; height: 4em;" class="img-fluid" src="../product-images/{{this.orderProduct.imageMany.[0]}}" alt=""></td>
                <td>{{this.quantity}}</td>
                <td>{{this.orderProduct.price}}</td>
                <td>
                    <select onchange="changeOrderStatus('{{this._id}}','{{this.item}}','{{this.quantity}}')" name="orderstatus" id="{{this.item}}" class="form-select" id="floatingSelect">
                        <option selected value="{{this.status}}">{{this.status}}</option>

                        {{#isEqual this.status 'Placed'}}
                        <option value="Shipped">Shipped</option>
                        <option value="On the Way">On the Way</option>
                        <option value="Delivered">Delivered</option>
                        <option value="Cancelled">Cancelled</option>
                        {{/isEqual}}

                        {{#isEqual this.status 'Shipped'}}
                        
                        <option value="On the Way">On the Way</option>
                        <option value="Delivered">Delivered</option>
                        <option value="Cancelled">Cancelled</option>
                        {{/isEqual}}

                        {{#isEqual this.status 'On the Way'}}
                       
                        <option value="Delivered">Delivered</option>
                        <option value="Cancelled">Cancelled</option>
                        {{/isEqual}}

                         {{#isEqual this.status 'Delivered'}}
                       
                        {{/isEqual}}

                        {{#isEqual this.status 'Cancel Requested'}}
                        <option value="Cancelled">Cancelled</option>
                        {{/isEqual}}

                        {{#isEqual this.status 'Return Requested'}}
                        <option value="Return Done">Return Done</option>
                        {{/isEqual}}

                        </select>
                
                </td>
                {{/each}}
              </tr>
           
            </tbody>

          </table>
        </div>
        <div class="row">
          <div class="col-xl-8">
            <p class="ms-3">Change every product status from the dropdown</p>

          </div>
          <div class="col-xl-3">
            <ul class="list-unstyled">
              <li class="text-muted ms-3"><span class="text-black me-4">SubTotal</span>&#8377; {{userDetail.noCouponTotal}}</li>
              <li class="text-muted ms-3 mt-2"><span class="text-black me-4">Discount</span>&#8377; {{userDetail.discount}}</li>
            </ul>
            <p class="text-black float-start"><span class="text-black me-3"> Total Amount</span><span
                style="font-size: 25px;">&#8377;{{userDetail.total}}</span></p>
          </div>
        </div>
        <hr>
      
       </div>
        </div>


  
</main>

<script>
       var divs = document.querySelectorAll('.create_index'); for (var i = 0; i < divs.length; ++i) { divs[i].innerHTML = i + 1 ;}

//------------------------Changing the order status by admin----------------------------------//
function changeOrderStatus(orderId,itemId,quantity){
    let fieldMain =document.getElementById(itemId)
    let subSelection = fieldMain.options[fieldMain.selectedIndex].text
    console.log(subSelection,' youuuuuuuuuuu');

    
  if(subSelection == 'Cancelled'){
    console.log('cancelled condition hitting')
    swal({
  title: "Are you sure to Approve?",
  icon: "warning",
  buttons: true,
  dangerMode: true,
})
.then((willDelete) => {
  if (willDelete) {

     $.ajax({
        url:'/admin/change-order-status',
        data:{
            orderID : orderId,
            itemID : itemId,
            quantity: quantity,
            orderStatus : subSelection
        },
        method:'post',
        success:(response)=>{
            if(response.status){
                  swal("Order status updated and "+response.quantity+ " quantity added to stock. Cancel Refund Inititated.", {
                   icon: "success",
                  });
              setTimeout(function(){
              getAdminRefundOrderDetail(response.orderID,response.itemID)
              }, 1000);
                
            }
        }
    })
  } else {
    location.reload()
  }
});
  }

  else if(subSelection == 'Return Done'){
     console.log('return condition hitting')
    swal({
  title: "Are you sure to Approve?",
  icon: "warning",
  buttons: true,
  dangerMode: true,
})
.then((willDelete) => {
  if (willDelete) {

     $.ajax({
        url:'/admin/change-order-status',
        data:{
            orderID : orderId,
            itemID : itemId,
            quantity: quantity,
            orderStatus : subSelection
        },
        method:'post',
        success:(response)=>{
            if(response.status){
                  swal("Order status updated and "+response.quantity+ " quantity added to stock. Return Refund Inititated.", {
                   icon: "success",
                  });
              setTimeout(function(){
              getAdminRefundOrderDetail(response.orderID,response.itemID)
              }, 1000);
                
            }
        }
    })
  } else {
    location.reload()
  }
});
  }


  else{
    console.log('other status change hitting')
    swal({
  title: "Are you sure?",
  icon: "warning",
  buttons: true,
  dangerMode: true,
})
.then((willDelete) => {
  if (willDelete) {
    swal("Order status updated", {
      icon: "success",
    });

     $.ajax({
        url:'/admin/change-order-status',
        data:{
            orderID : orderId,
            itemID : itemId,
            orderStatus : subSelection
        },
        method:'post',
        success:(response)=>{
            if(response.status){
              setTimeout(function(){
               location.reload()
              }, 1000);
                
            }
        }
    })
  } else {
    location.reload()
  }
});
  }
   
}

//function for refunding  to user
function getAdminRefundOrderDetail(OrderId,ItemId){
console.log(OrderId,ItemId,'function called in Get cancel order detail')
 $.ajax({
  url:'/admin/get-admin-cancel-order-detail',
  data:{
    OrderID: OrderId,
    ItemID: ItemId,
  },
  method:'post',
  success:(response)=>{
    if(response.cancelledOrderDetail){
      let orderDetailCancelled = response.cancelOrderDetail[0]
      let productName = orderDetailCancelled.product
      let userId = orderDetailCancelled.userId
      let orderId = orderDetailCancelled._id
      let totalOrderQuantity = response.totalQuantity
      console.log(totalOrderQuantity,'totalqyantity order')
      let priceDeductSingle = orderDetailCancelled.discount/totalOrderQuantity
      let totalPriceDeduct = orderDetailCancelled.quantityCancelled*priceDeductSingle
      let refundAmt = orderDetailCancelled.quantityCancelled * orderDetailCancelled.price - totalPriceDeduct
      let refundAmount = Math.floor(refundAmt)

      console.log(refundAmount,'refundamount')

      console.log(orderDetailCancelled,'received in ajax')
      if(orderDetailCancelled.paymentMethod =='ONLINE'){
        console.log('razorpay hitting')
        $.ajax({
          url:'/admin/payment-cancelled-wallet',
          data:{
            userID : userId,
            product : productName,
            orderID : orderId,
            refund : refundAmount,
            paymentMethod : orderDetailCancelled.paymentMethod,
          },
          method:'post',
          success:(response)=>{
            if(response.updatedWallet){
              alert('refund success of razorpay')
              location.reload()
            }
          }
        })
        


      }
      else if(orderDetailCancelled.paymentMethod =='PAYPAL'){
         console.log('paypal hitting')
            $.ajax({
          url:'/admin/payment-cancelled-wallet',
          data:{
            userID : userId,
            product : productName,
            orderID : orderId,
            refund : refundAmount,
            paymentMethod : orderDetailCancelled.paymentMethod,
          },
          method:'post',
          success:(response)=>{
            if(response.updatedWallet){
              alert('refund success of paypal')
              location.reload()
            }
          }
        })
      }
      else if(orderDetailCancelled.paymentMethod =='COD'){
         console.log('cod hitting')
         alert('status updated')
         location.reload()
      }
      else{
        console.log('payment method not found')
      }
    }
  }
 })
}
//------------------------END of changing the order status by admin----------------------------------//
</script>